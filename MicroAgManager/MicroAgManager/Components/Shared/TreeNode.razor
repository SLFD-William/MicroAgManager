<li class="TreeNode">
    @if (ChildContent != null)
        {
        <button class="@CollapseButtonClass()" @onclick=@(()=>OnNodeCollapseClick.InvokeAsync(this))>
            @if (IsCollapsed)
                {
                    <span>+</span>
                }
                else
                {
                    <span>-</span>
                }
        </button>
    }
    else
    {
        <div></div>
    }
    <button class="@SelectButtonClass()" @onclick=@(()=>OnNodeSelectClick.InvokeAsync(this))>
        @if (NodeContent != null)
        {
            @NodeContent   
        }
        else
        {
            <span >
                @NodeName
            </span>
        }
    </button>
    
    @if (ChildContent != null && !IsCollapsed)
    {
        <TreeView>
            @ChildContent
        </TreeView>
    }
</li>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public RenderFragment NodeContent { get; set; }
    [Parameter] public EventCallback<TreeNode> OnNodeSelectClick { get; set; }
    [Parameter] public EventCallback<TreeNode> OnNodeCollapseClick { get; set; }
    [Parameter] public EventCallback<TreeNode> OnSelectionChange { get; set; }
    [Parameter] public string NodeName { get; set; }
    private bool _IsSelected = false;
    [Parameter] public bool IsSelected { get =>_IsSelected; 
        set {
            if (_IsSelected == value) return;
            _IsSelected = value;
            OnSelectionChange.InvokeAsync(this);
        } 
    }
    [Parameter] public bool IsCollapsed { get; set; }
    private string SelectButtonClass() => IsSelected ? "active" : string.Empty;
    private string CollapseButtonClass() => IsSelected ? "active" : string.Empty;
    
}
