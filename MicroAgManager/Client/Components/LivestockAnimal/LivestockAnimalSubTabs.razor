@using Domain.Constants;
@using FrontEnd.Components.LivestockAnimal;
@using FrontEnd.Components.LivestockStatus;
@using FrontEnd.Components.LivestockBreed;
@inherits DataComponent
<TabControl @ref="_tabControl" TabSelected="@(async() => await FreshenData())" SelectedTabPage="@app.SelectedTabs" SelectedTabPageKey="@nameof(LivestockAnimalSubTabs)">
    <TabPage @ref="_breedsTab" Text="Breeds">
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_breedsTab)" @onclick="@(() =>_tabControl.ActivatePage(_breedsTab))">Breeds</button>
        </ButtonContent>
        <ChildContent>
            <LivestockBreedList  @ref="_livestockBreedList" Items="app.dbContext.LivestockBreeds.Where(s=>s.LivestockAnimalId==livestockAnimal.Id).OrderBy(a=>a.Name).Select(b=>new LivestockBreedSummary(b,app.dbContext))"></LivestockBreedList>
        </ChildContent>
    </TabPage>
    <TabPage @ref="_statusTab" Text="Statuses">
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_statusTab)" @onclick="@(() =>_tabControl.ActivatePage(_statusTab))">Statuses</button>
        </ButtonContent>
        <ChildContent>
            <LivestockStatusList @ref="_livestockStatusList" Items="app.dbContext.LivestockStatuses.Where(s=>s.LivestockAnimalId==livestockAnimal.Id).OrderBy(a=>a.Status).Select(s=>new LivestockStatusSummary(s,app.dbContext))"></LivestockStatusList>
        </ChildContent>
    </TabPage>
</TabControl>
