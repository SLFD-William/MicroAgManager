<div class="modalContainer">
    <dialog open="true">
        <ValidatedField Legend="Snooze Until" ValidationMessageFor="@(() => SnoozeUntil)">
            <InputDate @bind-Value="@SnoozeUntil" />
        </ValidatedField>
        <button type="button" @onclick="Submit">Snooze</button>
        <button type="button" @onclick="Cancel">Cancel</button>
    </dialog>
</div>

@code {
    [Parameter] public EventCallback<DateTime> Submitted { get; set; }
    [Parameter] public EventCallback Cancelled { get; set; }
    [Parameter] public DateTime? SuggestedSnooze { get; set; }
    private DateTime? SnoozeUntil { get; set; }

    protected override void OnInitialized()
    {
        SnoozeUntil = SuggestedSnooze;
        base.OnInitialized();
    }
    private async Task Cancel()
    {
        SnoozeUntil= null;
        await Cancelled.InvokeAsync();
        StateHasChanged();
    }
    private async Task Submit()
    {
        if (!SnoozeUntil.HasValue) return;
        await Submitted.InvokeAsync(SnoozeUntil.Value);
        StateHasChanged();
    }
}
