@using Domain.Constants;
@using Domain.Models;
@using FrontEnd.Components.Unit;
@inherits DataComponent<LandPlotModel>
@if (editContext is not null)
{
    <ValidatedForm editContext="editContext"
                   FreshenData="FreshenData"
                   OnValidSubmit="OnSubmit"
                   Cancel="Cancel"
                   showUpdateCancelButtons="true"
                   createOnly="@(((LandPlotModel)working).Id<1)"
                   Modal="Modal"
                    Show="Show"
                    @ref=_validatedForm>
        <DataContent>
            <ValidatedField Legend="Plot Use" ValidationMessageFor="@(() => ((LandPlotModel)working).Usage)">
                <InputSelect @bind-Value="@(((LandPlotModel)working).Usage)">
                    <option value="">Select Use ...</option>
                    <option value="@LandPlotUseConstants.GeneralUse">@LandPlotUseConstants.GeneralUse</option>
                    <option value="@LandPlotUseConstants.Garden">@LandPlotUseConstants.Garden</option>
                    <option value="@LandPlotUseConstants.Livestock">@LandPlotUseConstants.Livestock</option>
                    <option value="@LandPlotUseConstants.Pasture">@LandPlotUseConstants.Pasture</option>
                </InputSelect>
            </ValidatedField>
            <ValidatedField Legend="Name" ValidationMessageFor="@(() => ((LandPlotModel)working).Name)">
                <InputText  placeholder="Name" @bind-Value="@(((LandPlotModel)working).Name)" />
            </ValidatedField>
            <ValidatedField Legend="Description" ValidationMessageFor="@(() => ((LandPlotModel)working).Description)">
                <InputText placeholder="Description" @bind-Value="@(((LandPlotModel)working).Description)" />
            </ValidatedField>
            <ValidatedField Legend="Area" ValidationMessageFor="@(() => ((LandPlotModel)working).Area)">
                <InputNumber placeholder="0" @bind-Value="@(((LandPlotModel)working).Area)" />
            </ValidatedField>
            <ValidatedField ValidationMessageFor="@(() => ((LandPlotModel)working).AreaUnitId)">
                <LegendContent>
                    <div style="display:inline-flex">
                        <span>Area Units</span><button type="button" @onclick=ShowUnitEditor>+</button>
                        <UnitEditor Show=@showUnitModal showUpdateCancelButtons="true" @ref=_unitEditor Modal="true" Submitted="UnitCreated" Cancelled="UnitCanceled"></UnitEditor>
                    </div>
                </LegendContent>
                <ChildContent>
                    <InputSelect @bind-Value="@(((LandPlotModel)working).AreaUnitId)">
                        <option value="">Select Units ...</option>
                        @foreach (var unit in app.dbContext.Units.Where(u => u.Category == UnitCategoryConstants.Area.Key))
                        {
                            <option value="@unit.Id">@($"{unit.Name} ({unit.Symbol})")</option>
                        }
                    </InputSelect>
                </ChildContent>
            </ValidatedField>
        </DataContent>
    </ValidatedForm>
}
