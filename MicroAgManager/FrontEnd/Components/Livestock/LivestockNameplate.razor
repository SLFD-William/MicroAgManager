@using Domain.Constants;
@using Domain.Models;
@using Microsoft.EntityFrameworkCore
@if (Livestock is not null)
{
    <section class="LivestockNameplate" >
        <span class="nameplate @SetNameplateSpan">
            @if (ShowEmoji)
            {
                <span class="emoji">
                    @Livestock.Breed?.EmojiChar
                    @if (ShowGeneral)
                    {
                        <p>@Livestock.Breed?.Animal?.Name</p>
                    }
                </span>
            }
            @if (ShowGender)
            {
                <span class="fa-stack gender">
                    <i class="fas fa-stack-1x @(Livestock.Gender==GenderConstants.Female?"fa-venus female":"fa-mars male")"></i>
                    @if (Livestock.Sterile)
                    {
                        <i class="fas fa-ban fa-stack-1x"></i>
                    }
                </span>
            }
            <h1 class="name">@Livestock.Name</h1>
        </span>
            @if (ShowGeneral)
            {
                <p class="variety">@Livestock.Variety</p>
                <p class="breed">@Livestock.Breed?.Name</p>
            }

            @if (ShowStatus)
            {
                <p class="status">@Livestock.Status?.Status</p>
            }
            @if (ShowAge)
            {
                <p class="age">@Age()</p>
            }
            @if (ShowGeneral && !ShowEmoji)
            {
                <p class="animal">@Livestock.Breed?.Animal?.Name</p>
            }
            @if (ShowParents)
            {
            <span class="parents">
                @if (ShowMother)
                {
                    <CascadingValue Value="Livestock.Mother">
                        <LivestockNameplate ShowEmoji=false></LivestockNameplate>
                    </CascadingValue>
                }
                @if(ShowFather)
                {
                    <CascadingValue Value="Livestock.Father">
                        <LivestockNameplate ShowEmoji=false></LivestockNameplate>
                    </CascadingValue>
                }
            </span>
            }
    </section>
}
@code {
    [CascadingParameter] public LivestockModel? Livestock { get; set; }
    [Parameter] public bool ShowGender { get; set; } = true;
    [Parameter] public bool ShowEmoji { get; set; } = true;
    [Parameter] public bool ShowGeneral { get; set; } = false;
    [Parameter] public bool ShowStatus { get; set; } = false;
    [Parameter] public bool ShowAge { get; set; } = false;
    [Parameter] public bool ShowFather { get; set; } = true;
    [Parameter] public bool ShowMother { get; set; } = true;
    [Parameter] public bool ShowParents { get; set; } = false;
    private string SetNameplateSpan => ShowGeneral ? "" : "fullWidth";
    private string Age()
    {
        if (Livestock is null)
            return "";

        var age = DateTime.Now.Subtract(Livestock.Birthdate);
        switch (age.Days)
        {
            case var d when d < 1:
                return $"{age.Hours} hours old";
            case var d when d < 90:
                return $"{age.Days} days old";
            case var d when d < 548:
                return $"{age.Days / 30} months old";
            default:
                return $"{age.Days / 365} years old";
        }
    }
}