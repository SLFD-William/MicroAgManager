@using Domain.Constants;
@using Domain.Models;
@using FrontEnd.Components.LandPlot;
@using FrontEnd.Components.LivestockAnimal;
@using FrontEnd.Components.ScheduledDuty;
@using FrontEnd.Components.Duty;
@using FrontEnd.Components.Registrar;
@using FrontEnd.Components.Measure;
@using FrontEnd.Components.Treatment;
@inherits DataComponent<FarmLocationModel>
<TabControl @ref="_tabControl" TabSelected="@(async() => await FreshenData())" SelectedTab="@app.SelectedTabs" SelectedTabPageKey="@nameof(FarmSubTabs)" >
    <TabPage @ref="_closeTab" Text="x">

    </TabPage>
    <TabPage @ref="_plotTab">
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_plotTab)" @onclick="@(() =>_tabControl.ActivatePage(_plotTab))">
                Plots
                @((MarkupString)GetPlotCount(LandPlotUseConstants.GeneralUse))
                @((MarkupString)GetPlotCount(LandPlotUseConstants.Pasture))
                @((MarkupString)GetPlotCount(LandPlotUseConstants.Garden))
                @((MarkupString)GetPlotCount(LandPlotUseConstants.Livestock))
                @((MarkupString)GetPlotCount(LandPlotUseConstants.Outbuilding))
            </button>
        </ButtonContent>
        <ChildContent>
            <LandPlotList @ref="_landPlotList"
                          Submitted="TabUpdated"
                Items="app.dbContext.LandPlots.Where(f => f.FarmLocationId == farm.Id).OrderBy(f => f.Usage).ThenBy(f=>f.Name).Select(f=>new LandPlotSummary(f,app.dbContext))">
            </LandPlotList>
        </ChildContent>
    </TabPage>
    <TabPage @ref="_livestockTab" Text="Livestock">
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_livestockTab)" @onclick="@(() =>_tabControl.ActivatePage(_livestockTab))">Livestock</button>
        </ButtonContent>
        <ChildContent>
            <LivestockAnimalList @ref="_livestockAnimalList"
                                 Submitted="TabUpdated"
                Items="app.dbContext.LivestockAnimals.OrderBy(a=>a.Name).Select(a=>new LivestockAnimalSummary(a,app.dbContext))" >
            </LivestockAnimalList>
        </ChildContent>

    </TabPage>
    <TabPage @ref="_scheduledDutyTab" Text="Scheduled Duties" >
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_scheduledDutyTab)" @onclick="@(() =>_tabControl.ActivatePage(_scheduledDutyTab))">
                Scheduled Duties
                @((MarkupString)GetOpenDutyCount())
            </button>
        </ButtonContent>
        <ChildContent>
            <ScheduledDutyList @ref="_scheduledDutyList" Submitted="TabUpdated" Items="app.dbContext.ScheduledDuties.OrderByDescending(f => f.DueOn)"></ScheduledDutyList>
        </ChildContent>
    </TabPage>
    <TabPage @ref="_dutyTab" Text="Duties" >
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_dutyTab)" @onclick="@(() =>_tabControl.ActivatePage(_dutyTab))">
                Duties              
            </button>
        </ButtonContent>
        <ChildContent>
            <DutyList @ref="_dutyList" Submitted="TabUpdated" Items="app.dbContext.Duties.OrderByDescending(f => f.Name).Select(s => new DutySummary(s, app.dbContext))"></DutyList>
        </ChildContent>
    </TabPage>
    <TabPage @ref="_registrarsTab" Text="Registrars">
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_registrarsTab)" @onclick="@(() =>_tabControl.ActivatePage(_registrarsTab))">
               Registrars
            </button>
        </ButtonContent>
        <ChildContent>
            <RegistrarList @ref="_registrarList" Submitted="TabUpdated" Items="app.dbContext.Registrars.OrderByDescending(f => f.Name)"></RegistrarList>
        </ChildContent>
    </TabPage>
    <TabPage @ref="_measuresTab" Text="Measures" >
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_measuresTab)" @onclick="@(() =>_tabControl.ActivatePage(_measuresTab))">
                Measures
            </button>
        </ButtonContent>
        <ChildContent>
            <MeasureList @ref="_measureList" Submitted="TabUpdated" Items="app.dbContext.Measures.OrderByDescending(f => f.Name).Select(m=>new MeasureSummary(m,app.dbContext)).ToList()"></MeasureList>
        </ChildContent>
    </TabPage>
    <TabPage @ref="_treatmentsTab" Text="Treatments" >
        <ButtonContent>
            <button type="button" class="@_tabControl.GetButtonClass(_treatmentsTab)" @onclick="@(() =>_tabControl.ActivatePage(_treatmentsTab))">
                Treatments
            </button>
        </ButtonContent>
        <ChildContent>
            <TreatmentList @ref="_treatmentList" Submitted="TabUpdated" Items="app.dbContext.Treatments.OrderByDescending(f => f.Name).Select(m=>new TreatmentSummary(m,app.dbContext)).ToList()"></TreatmentList>
        </ChildContent>
    </TabPage>
</TabControl>

