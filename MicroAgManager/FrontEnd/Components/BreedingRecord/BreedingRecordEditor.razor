@using Domain.Constants;
@using Domain.Models;
@inherits DataComponent<BreedingRecordModel>
@if (editContext is not null)
{
    <ValidatedForm editContext="editContext" 
        FreshenData="FreshenData"
        OnValidSubmit="OnSubmit" 
        Cancel="Cancel"
        showUpdateCancelButtons="showUpdateCancelButtons"
        Modal="Modal"
        Show="Show"
        @ref=_validatedForm>
            <DataContent>
                <ValidatedField Legend="Service Date" ValidationMessageFor="@(() => ((BreedingRecordModel)working).ServiceDate)">
                    <InputDate @bind-Value="@(((BreedingRecordModel)working).ServiceDate)" />
                </ValidatedField>
                <ValidatedField ValidationMessageFor="@(() => ((BreedingRecordModel)working).FemaleId)">
                        <LegendContent>
                            @LivestockAnimal.ParentFemaleName
                        </LegendContent>
                        <ChildContent>
                            <InputSelect @bind-Value="@(((BreedingRecordModel)working).FemaleId)">
                                <option value="0">Select @LivestockAnimal.ParentFemaleName ...</option>
                                @foreach (var g in app.dbContext.Livestocks.Where(s => s.LivestockBreedId == livestockBreedId && s.Gender == GenderConstants.Female && !s.Sterile))
                                {
                                    <option value="@g.Id">@g.Name</option>
                                }
                            </InputSelect>
                        </ChildContent>
                    </ValidatedField>
                <ValidatedField Legend="Male" ValidationMessageFor="@(() => ((BreedingRecordModel)working).MaleId)">
                        <LegendContent>
                            @LivestockAnimal.ParentMaleName
                        </LegendContent>
                        <ChildContent>
                            <InputSelect @bind-Value="@(((BreedingRecordModel)working).MaleId)">
                                <option value="0">Select @LivestockAnimal.ParentMaleName ...</option>
                                @foreach (var g in app.dbContext.Livestocks.Where(s => s.LivestockBreedId==livestockBreedId && s.Gender == GenderConstants.Male && !s.Sterile))
                                {
                                    <option value="@g.Id">@g.Name</option>
                                }
                            </InputSelect>
                        </ChildContent>
                    </ValidatedField>
            <ValidatedField Legend="Resolution" ValidationMessageFor="@(() => ((BreedingRecordModel)working).Resolution)">
                <InputSelect @bind-Value="@(((BreedingRecordModel)working).Resolution)">
                    <option value="">Select Resolution ...</option>
                    <option value="@BreedingResolutionConstants.Success">@BreedingResolutionConstants.Success</option>
                    <option value="@BreedingResolutionConstants.NotImpregnated">@BreedingResolutionConstants.NotImpregnated</option>
                </InputSelect>
            </ValidatedField>
            @if (!string.IsNullOrEmpty(((BreedingRecordModel)working).Resolution))
            {
                <ValidatedField Legend="Resolution Date" ValidationMessageFor="@(() => ((BreedingRecordModel)working).ResolutionDate)">
                    <InputDate @bind-Value="@(((BreedingRecordModel)working).ResolutionDate)" />
                </ValidatedField>
                @if (((BreedingRecordModel)working).Resolution == BreedingResolutionConstants.Success)
                {
                    <ValidatedField CssClass="firstColumn" Legend="Males Born" ValidationMessageFor="@(() => ((BreedingRecordModel)working).BornMales)">
                        <InputNumber @bind-Value="@(((BreedingRecordModel)working).BornMales)" />
                    </ValidatedField>
                    <ValidatedField Legend="Stillborn Males" ValidationMessageFor="@(() => ((BreedingRecordModel)working).StillbornMales)">
                        <InputNumber @bind-Value="@(((BreedingRecordModel)working).StillbornMales)" />
                    </ValidatedField>
                    <ValidatedField CssClass="firstColumn" Legend="Females Born" ValidationMessageFor="@(() => ((BreedingRecordModel)working).BornFemales)">
                        <InputNumber @bind-Value="@(((BreedingRecordModel)working).BornFemales)" />
                    </ValidatedField>
                    <ValidatedField Legend="Stillborn Females" ValidationMessageFor="@(() => ((BreedingRecordModel)working).StillbornFemales)">
                        <InputNumber @bind-Value="@(((BreedingRecordModel)working).StillbornFemales)" />
                    </ValidatedField>
                }
            }
            <ValidatedField CssClass="fullWidth" Legend="Notes" ValidationMessageFor="@(() => ((BreedingRecordModel)working).Notes)">
                    <InputTextArea @bind-Value="((BreedingRecordModel)working).Notes"></InputTextArea>
                </ValidatedField>
            </DataContent>
        </ValidatedForm>
}